//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tula.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBConnectionString : DbContext
    {
        public DBConnectionString()
            : base("name=DBConnectionString")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdGiver> AdGivers { get; set; }
        public virtual DbSet<AdGiverTracing> AdGiverTracings { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CMSContent> CMSContents { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<DivisionOrState> DivisionOrStates { get; set; }
        public virtual DbSet<HomePageBanner> HomePageBanners { get; set; }
        public virtual DbSet<LeavingCaus> LeavingCauses { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<MappingCategory> MappingCategories { get; set; }
        public virtual DbSet<MappingTable> MappingTables { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<MyFavourite> MyFavourites { get; set; }
        public virtual DbSet<OiiONewsLetter> OiiONewsLetters { get; set; }
        public virtual DbSet<OiiOOther> OiiOOthers { get; set; }
        public virtual DbSet<Picture> Pictures { get; set; }
        public virtual DbSet<PictureLog> PictureLogs { get; set; }
        public virtual DbSet<PoliceStation> PoliceStations { get; set; }
        public virtual DbSet<PostOffice> PostOffices { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tula> Tulas { get; set; }
        public virtual DbSet<TulaTreeAlert> TulaTreeAlerts { get; set; }
        public virtual DbSet<TulaTreeHelpSupport> TulaTreeHelpSupports { get; set; }
        public virtual DbSet<UrlWFList> UrlWFLists { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<UserRating> UserRatings { get; set; }
        public virtual DbSet<UserWFPermission> UserWFPermissions { get; set; }
        public virtual DbSet<VisitorCounter> VisitorCounters { get; set; }
        public virtual DbSet<VisitorInfo> VisitorInfoes { get; set; }
        public virtual DbSet<VisitorInfoDetail> VisitorInfoDetails { get; set; }
        public virtual DbSet<Loc> Locs { get; set; }
        public virtual DbSet<MaterialLog> MaterialLogs { get; set; }
    
        public virtual int DeleteFromMaterialAndSaveToLog(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromMaterialAndSaveToLog", idParameter);
        }
    
        public virtual int DeleteFromMyFvrt(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromMyFvrt", idParameter);
        }
    
        public virtual int DeleteFromUserGroup(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromUserGroup", idParameter);
        }
    
        public virtual ObjectResult<GetAdGiverArcMaterialsForSearch_Result> GetAdGiverArcMaterialsForSearch(Nullable<long> categoryID, string adGiveUserID, string matCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(long));
    
            var adGiveUserIDParameter = adGiveUserID != null ?
                new ObjectParameter("adGiveUserID", adGiveUserID) :
                new ObjectParameter("adGiveUserID", typeof(string));
    
            var matCodeParameter = matCode != null ?
                new ObjectParameter("matCode", matCode) :
                new ObjectParameter("matCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdGiverArcMaterialsForSearch_Result>("GetAdGiverArcMaterialsForSearch", categoryIDParameter, adGiveUserIDParameter, matCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAdGiverMaterialsForSearch_Result> GetAdGiverMaterialsForSearch(Nullable<long> categoryID, string adGiveUserID, string matCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(long));
    
            var adGiveUserIDParameter = adGiveUserID != null ?
                new ObjectParameter("adGiveUserID", adGiveUserID) :
                new ObjectParameter("adGiveUserID", typeof(string));
    
            var matCodeParameter = matCode != null ?
                new ObjectParameter("matCode", matCode) :
                new ObjectParameter("matCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdGiverMaterialsForSearch_Result>("GetAdGiverMaterialsForSearch", categoryIDParameter, adGiveUserIDParameter, matCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllFromPostOffice_Result> GetAllFromPostOffice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllFromPostOffice_Result>("GetAllFromPostOffice");
        }
    
        public virtual ObjectResult<GetArcMaterialsForSearch_Result> GetArcMaterialsForSearch(Nullable<long> categoryID, Nullable<long> adGiveID, string matCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(long));
    
            var adGiveIDParameter = adGiveID.HasValue ?
                new ObjectParameter("adGiveID", adGiveID) :
                new ObjectParameter("adGiveID", typeof(long));
    
            var matCodeParameter = matCode != null ?
                new ObjectParameter("matCode", matCode) :
                new ObjectParameter("matCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArcMaterialsForSearch_Result>("GetArcMaterialsForSearch", categoryIDParameter, adGiveIDParameter, matCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetMapCategory_Result> GetMapCategory(Nullable<long> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMapCategory_Result>("GetMapCategory", categoryIDParameter);
        }
    
        public virtual ObjectResult<GetMaterialsForSearch_Result> GetMaterialsForSearch(Nullable<long> categoryID, Nullable<long> adGiveID, string matCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(long));
    
            var adGiveIDParameter = adGiveID.HasValue ?
                new ObjectParameter("adGiveID", adGiveID) :
                new ObjectParameter("adGiveID", typeof(long));
    
            var matCodeParameter = matCode != null ?
                new ObjectParameter("matCode", matCode) :
                new ObjectParameter("matCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMaterialsForSearch_Result>("GetMaterialsForSearch", categoryIDParameter, adGiveIDParameter, matCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetModelNameForSearch_Result> GetModelNameForSearch(Nullable<long> brandID, string modelName)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("brandID", brandID) :
                new ObjectParameter("brandID", typeof(long));
    
            var modelNameParameter = modelName != null ?
                new ObjectParameter("modelName", modelName) :
                new ObjectParameter("modelName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModelNameForSearch_Result>("GetModelNameForSearch", brandIDParameter, modelNameParameter);
        }
    
        public virtual ObjectResult<GetSearchResultForRegisteredUser_Result> GetSearchResultForRegisteredUser(string email, Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate, Nullable<System.DateTime> setMaxDAte)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var setMaxDAteParameter = setMaxDAte.HasValue ?
                new ObjectParameter("SetMaxDAte", setMaxDAte) :
                new ObjectParameter("SetMaxDAte", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchResultForRegisteredUser_Result>("GetSearchResultForRegisteredUser", emailParameter, startDateParameter, enddateParameter, setMaxDAteParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetServerDateTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetServerDateTime");
        }
    
        public virtual ObjectResult<GetSortedMaterialAccordingToCategoreyIIDnClientTypeIdForClientListView_Result> GetSortedMaterialAccordingToCategoreyIIDnClientTypeIdForClientListView(Nullable<int> clientTypeID, Nullable<long> catagoryIID, Nullable<System.DateTime> recentDate, Nullable<int> startIndex, Nullable<int> maximumRows)
        {
            var clientTypeIDParameter = clientTypeID.HasValue ?
                new ObjectParameter("ClientTypeID", clientTypeID) :
                new ObjectParameter("ClientTypeID", typeof(int));
    
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            var recentDateParameter = recentDate.HasValue ?
                new ObjectParameter("RecentDate", recentDate) :
                new ObjectParameter("RecentDate", typeof(System.DateTime));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSortedMaterialAccordingToCategoreyIIDnClientTypeIdForClientListView_Result>("GetSortedMaterialAccordingToCategoreyIIDnClientTypeIdForClientListView", clientTypeIDParameter, catagoryIIDParameter, recentDateParameter, startIndexParameter, maximumRowsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertMaterialAndAllChildXML(string materialXML)
        {
            var materialXMLParameter = materialXML != null ?
                new ObjectParameter("MaterialXML", materialXML) :
                new ObjectParameter("MaterialXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertMaterialAndAllChildXML", materialXMLParameter);
        }
    
        public virtual ObjectResult<OH_OT_GetAllOtherContent_Result> OH_OT_GetAllOtherContent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OH_OT_GetAllOtherContent_Result>("OH_OT_GetAllOtherContent");
        }
    
        public virtual ObjectResult<OH_OT_GetNavMenu_Result> OH_OT_GetNavMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OH_OT_GetNavMenu_Result>("OH_OT_GetNavMenu");
        }
    
        public virtual ObjectResult<OH_SP_GetAllSpotLightAds_Result> OH_SP_GetAllSpotLightAds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OH_SP_GetAllSpotLightAds_Result>("OH_SP_GetAllSpotLightAds");
        }
    
        public virtual ObjectResult<SearchForPoliceStationbyCountryDivisionDistrict_Result> SearchForPoliceStationbyCountryDivisionDistrict(string policeStationName, Nullable<long> districtID, Nullable<long> divOrStateID, Nullable<long> countryID)
        {
            var policeStationNameParameter = policeStationName != null ?
                new ObjectParameter("policeStationName", policeStationName) :
                new ObjectParameter("policeStationName", typeof(string));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("districtID", districtID) :
                new ObjectParameter("districtID", typeof(long));
    
            var divOrStateIDParameter = divOrStateID.HasValue ?
                new ObjectParameter("divOrStateID", divOrStateID) :
                new ObjectParameter("divOrStateID", typeof(long));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchForPoliceStationbyCountryDivisionDistrict_Result>("SearchForPoliceStationbyCountryDivisionDistrict", policeStationNameParameter, districtIDParameter, divOrStateIDParameter, countryIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_CategoryTree_GetCategoryListByParentID_Result> SP_CategoryTree_GetCategoryListByParentID(Nullable<long> parId)
        {
            var parIdParameter = parId.HasValue ?
                new ObjectParameter("parId", parId) :
                new ObjectParameter("parId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CategoryTree_GetCategoryListByParentID_Result>("SP_CategoryTree_GetCategoryListByParentID", parIdParameter);
        }
    
        public virtual ObjectResult<SP_CategoryTree_GetCategoryParentID_Result> SP_CategoryTree_GetCategoryParentID(Nullable<long> parID)
        {
            var parIDParameter = parID.HasValue ?
                new ObjectParameter("parID", parID) :
                new ObjectParameter("parID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CategoryTree_GetCategoryParentID_Result>("SP_CategoryTree_GetCategoryParentID", parIDParameter);
        }
    
        public virtual ObjectResult<SP_CategoryTree_GetSearchedCategory_Result> SP_CategoryTree_GetSearchedCategory(string catName)
        {
            var catNameParameter = catName != null ?
                new ObjectParameter("catName", catName) :
                new ObjectParameter("catName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CategoryTree_GetSearchedCategory_Result>("SP_CategoryTree_GetSearchedCategory", catNameParameter);
        }
    
        public virtual ObjectResult<SP_CategoryTree_GetSearchedCategoryOrAll_Result> SP_CategoryTree_GetSearchedCategoryOrAll(string catName, Nullable<long> parId)
        {
            var catNameParameter = catName != null ?
                new ObjectParameter("catName", catName) :
                new ObjectParameter("catName", typeof(string));
    
            var parIdParameter = parId.HasValue ?
                new ObjectParameter("parId", parId) :
                new ObjectParameter("parId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CategoryTree_GetSearchedCategoryOrAll_Result>("SP_CategoryTree_GetSearchedCategoryOrAll", catNameParameter, parIdParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GetAdgiverFnameLnamePhn_Result> sp_GetAdgiverFnameLnamePhn(string userEmailId)
        {
            var userEmailIdParameter = userEmailId != null ?
                new ObjectParameter("userEmailId", userEmailId) :
                new ObjectParameter("userEmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAdgiverFnameLnamePhn_Result>("sp_GetAdgiverFnameLnamePhn", userEmailIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAllLatestAds_Result> SP_GetAllLatestAds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllLatestAds_Result>("SP_GetAllLatestAds");
        }
    
        public virtual ObjectResult<SP_GetAllMaterialAccordingToCategoreyIID_Result> SP_GetAllMaterialAccordingToCategoreyIID(Nullable<long> catagoryIID)
        {
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllMaterialAccordingToCategoreyIID_Result>("SP_GetAllMaterialAccordingToCategoreyIID", catagoryIIDParameter);
        }
    
        public virtual ObjectResult<SP_GetAllMaterialForCategoreyIIDnClientType_Result> SP_GetAllMaterialForCategoreyIIDnClientType(Nullable<long> catagoryIID, Nullable<int> clientTypeID)
        {
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            var clientTypeIDParameter = clientTypeID.HasValue ?
                new ObjectParameter("ClientTypeID", clientTypeID) :
                new ObjectParameter("ClientTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllMaterialForCategoreyIIDnClientType_Result>("SP_GetAllMaterialForCategoreyIIDnClientType", catagoryIIDParameter, clientTypeIDParameter);
        }
    
        public virtual ObjectResult<SP_GetAllRecentMaterialAdsForCategoreyIID_Result> SP_GetAllRecentMaterialAdsForCategoreyIID(Nullable<long> catagoryIID)
        {
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllRecentMaterialAdsForCategoreyIID_Result>("SP_GetAllRecentMaterialAdsForCategoreyIID", catagoryIIDParameter);
        }
    
        public virtual ObjectResult<SP_GetAllSortedRecentMaterialAdsForCategoreyIID_Result> SP_GetAllSortedRecentMaterialAdsForCategoreyIID(Nullable<long> catagoryIID, Nullable<int> startIndex, Nullable<int> maximumRows)
        {
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllSortedRecentMaterialAdsForCategoreyIID_Result>("SP_GetAllSortedRecentMaterialAdsForCategoreyIID", catagoryIIDParameter, startIndexParameter, maximumRowsParameter);
        }
    
        public virtual ObjectResult<SP_GetDistrictForSearch_Result> SP_GetDistrictForSearch(string districtName, Nullable<int> countryId)
        {
            var districtNameParameter = districtName != null ?
                new ObjectParameter("districtName", districtName) :
                new ObjectParameter("districtName", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("countryId", countryId) :
                new ObjectParameter("countryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDistrictForSearch_Result>("SP_GetDistrictForSearch", districtNameParameter, countryIdParameter);
        }
    
        public virtual int SP_GetFourMortgageType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetFourMortgageType");
        }
    
        public virtual ObjectResult<SP_GetHelpSupportAccordingToHelpSupportID_Result> SP_GetHelpSupportAccordingToHelpSupportID(Nullable<int> helpSupportTypeID, Nullable<int> startIndex, Nullable<int> maximumRows)
        {
            var helpSupportTypeIDParameter = helpSupportTypeID.HasValue ?
                new ObjectParameter("HelpSupportTypeID", helpSupportTypeID) :
                new ObjectParameter("HelpSupportTypeID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHelpSupportAccordingToHelpSupportID_Result>("SP_GetHelpSupportAccordingToHelpSupportID", helpSupportTypeIDParameter, startIndexParameter, maximumRowsParameter);
        }
    
        public virtual ObjectResult<SP_GetLocationByMaterialIID_Result> SP_GetLocationByMaterialIID(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetLocationByMaterialIID_Result>("SP_GetLocationByMaterialIID", idParameter);
        }
    
        public virtual ObjectResult<SP_GetLocationForGoogleMap_Result> SP_GetLocationForGoogleMap(Nullable<long> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("locationID", locationID) :
                new ObjectParameter("locationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetLocationForGoogleMap_Result>("SP_GetLocationForGoogleMap", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_GetLocationForSearch_Result> SP_GetLocationForSearch(string locationName, Nullable<long> policeStationId, Nullable<long> districtId, Nullable<int> countryId)
        {
            var locationNameParameter = locationName != null ?
                new ObjectParameter("locationName", locationName) :
                new ObjectParameter("locationName", typeof(string));
    
            var policeStationIdParameter = policeStationId.HasValue ?
                new ObjectParameter("policeStationId", policeStationId) :
                new ObjectParameter("policeStationId", typeof(long));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("districtId", districtId) :
                new ObjectParameter("districtId", typeof(long));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("countryId", countryId) :
                new ObjectParameter("countryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetLocationForSearch_Result>("SP_GetLocationForSearch", locationNameParameter, policeStationIdParameter, districtIdParameter, countryIdParameter);
        }
    
        public virtual ObjectResult<SP_GetMaterialAccordingToMaterialIID_Result> SP_GetMaterialAccordingToMaterialIID(Nullable<long> materialIID)
        {
            var materialIIDParameter = materialIID.HasValue ?
                new ObjectParameter("MaterialIID", materialIID) :
                new ObjectParameter("MaterialIID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMaterialAccordingToMaterialIID_Result>("SP_GetMaterialAccordingToMaterialIID", materialIIDParameter);
        }
    
        public virtual ObjectResult<SP_GetPoliceStaionForSearch_Result> SP_GetPoliceStaionForSearch(string policeStationName, Nullable<long> districtId, Nullable<int> countryId)
        {
            var policeStationNameParameter = policeStationName != null ?
                new ObjectParameter("policeStationName", policeStationName) :
                new ObjectParameter("policeStationName", typeof(string));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("districtId", districtId) :
                new ObjectParameter("districtId", typeof(long));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("countryId", countryId) :
                new ObjectParameter("countryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPoliceStaionForSearch_Result>("SP_GetPoliceStaionForSearch", policeStationNameParameter, districtIdParameter, countryIdParameter);
        }
    
        public virtual ObjectResult<SP_GetRandomAllRecentMaterialAccordingToCategoreyIID_Result> SP_GetRandomAllRecentMaterialAccordingToCategoreyIID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRandomAllRecentMaterialAccordingToCategoreyIID_Result>("SP_GetRandomAllRecentMaterialAccordingToCategoreyIID");
        }
    
        public virtual ObjectResult<SP_GetRandomAllRecentMaterialAds_Result> SP_GetRandomAllRecentMaterialAds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRandomAllRecentMaterialAds_Result>("SP_GetRandomAllRecentMaterialAds");
        }
    
        public virtual ObjectResult<SP_GetSortedAllMaterialForCategoreyIIDnClientType_Result> SP_GetSortedAllMaterialForCategoreyIIDnClientType(Nullable<long> catagoryIID, Nullable<int> clientTypeID, Nullable<int> startIndex, Nullable<int> maximumRows)
        {
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            var clientTypeIDParameter = clientTypeID.HasValue ?
                new ObjectParameter("ClientTypeID", clientTypeID) :
                new ObjectParameter("ClientTypeID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSortedAllMaterialForCategoreyIIDnClientType_Result>("SP_GetSortedAllMaterialForCategoreyIIDnClientType", catagoryIIDParameter, clientTypeIDParameter, startIndexParameter, maximumRowsParameter);
        }
    
        public virtual ObjectResult<SP_GetSortedMaterialAccordingToCategoreyIID_Result> SP_GetSortedMaterialAccordingToCategoreyIID(Nullable<long> catagoryIID, Nullable<int> startIndex, Nullable<int> maximumRows)
        {
            var catagoryIIDParameter = catagoryIID.HasValue ?
                new ObjectParameter("CatagoryIID", catagoryIID) :
                new ObjectParameter("CatagoryIID", typeof(long));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSortedMaterialAccordingToCategoreyIID_Result>("SP_GetSortedMaterialAccordingToCategoreyIID", catagoryIIDParameter, startIndexParameter, maximumRowsParameter);
        }
    
        public virtual ObjectResult<SP_GetWholeWebSearch_Result> SP_GetWholeWebSearch(string searchKeyWord)
        {
            var searchKeyWordParameter = searchKeyWord != null ?
                new ObjectParameter("SearchKeyWord", searchKeyWord) :
                new ObjectParameter("SearchKeyWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetWholeWebSearch_Result>("SP_GetWholeWebSearch", searchKeyWordParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_UpdateAccNamePhone(string userEmailId, string name, string phoneNo1)
        {
            var userEmailIdParameter = userEmailId != null ?
                new ObjectParameter("userEmailId", userEmailId) :
                new ObjectParameter("userEmailId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var phoneNo1Parameter = phoneNo1 != null ?
                new ObjectParameter("PhoneNo1", phoneNo1) :
                new ObjectParameter("PhoneNo1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAccNamePhone", userEmailIdParameter, nameParameter, phoneNo1Parameter);
        }
    
        public virtual int sp_UpdateAccPassword(string userEmailId, string loginPassword)
        {
            var userEmailIdParameter = userEmailId != null ?
                new ObjectParameter("userEmailId", userEmailId) :
                new ObjectParameter("userEmailId", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAccPassword", userEmailIdParameter, loginPasswordParameter);
        }
    
        public virtual int sp_UpdateUserDeactivation(string userEmailId, string comments, Nullable<int> leavingCausesID, Nullable<bool> isActiveUser)
        {
            var userEmailIdParameter = userEmailId != null ?
                new ObjectParameter("userEmailId", userEmailId) :
                new ObjectParameter("userEmailId", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var leavingCausesIDParameter = leavingCausesID.HasValue ?
                new ObjectParameter("LeavingCausesID", leavingCausesID) :
                new ObjectParameter("LeavingCausesID", typeof(int));
    
            var isActiveUserParameter = isActiveUser.HasValue ?
                new ObjectParameter("IsActiveUser", isActiveUser) :
                new ObjectParameter("IsActiveUser", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUserDeactivation", userEmailIdParameter, commentsParameter, leavingCausesIDParameter, isActiveUserParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> SpCountAllMaterialForCategorey(string catagoryName)
        {
            var catagoryNameParameter = catagoryName != null ?
                new ObjectParameter("CatagoryName", catagoryName) :
                new ObjectParameter("CatagoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCountAllMaterialForCategorey", catagoryNameParameter);
        }
    
        public virtual int SpDeleteUrlList(Nullable<int> deleteUrlList)
        {
            var deleteUrlListParameter = deleteUrlList.HasValue ?
                new ObjectParameter("DeleteUrlList", deleteUrlList) :
                new ObjectParameter("DeleteUrlList", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDeleteUrlList", deleteUrlListParameter);
        }
    
        public virtual ObjectResult<SpGetAllMaterialForCategorey_Result> SpGetAllMaterialForCategorey(string catagoryName)
        {
            var catagoryNameParameter = catagoryName != null ?
                new ObjectParameter("CatagoryName", catagoryName) :
                new ObjectParameter("CatagoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllMaterialForCategorey_Result>("SpGetAllMaterialForCategorey", catagoryNameParameter);
        }
    
        public virtual ObjectResult<SpGetAllPoliceStation_Result> SpGetAllPoliceStation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllPoliceStation_Result>("SpGetAllPoliceStation");
        }
    
        public virtual ObjectResult<SpGetData_Result> SpGetData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetData_Result>("SpGetData");
        }
    }
}
